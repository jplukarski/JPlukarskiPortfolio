{"ast":null,"code":"var _jsxFileName = \"/Users/joeplukarski/projects/apps/webapps/repositories/Joe-Plukarski-Portfolio/src/components/project.jsx\";\nimport React, { useState } from 'react';\nimport { Segment, Image, Grid, Dimmer, Button, Modal, Divider } from 'semantic-ui-react';\n\nconst Project = props => {\n  const [active, setActive] = useState(false);\n  const [openModel, setOpenModel] = useState(false);\n\n  const handleHide = () => {\n    setActive(true);\n  };\n\n  const handShow = () => {\n    setActive(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    onMouseEnter: () => handleHide(),\n    onMouseLeave: () => handShow(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dimmer.Dimmable, {\n    dimmed: active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"campaignquery.jpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Dimmer, {\n    active: active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 33\n    }\n  }, props.text), /*#__PURE__*/React.createElement(Modal, {\n    closeIcon: true,\n    onClose: () => setOpenModel(false),\n    onOpen: () => setOpenModel(true),\n    open: openModel,\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 46\n      }\n    }, \"See More\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 41\n    }\n  }, props.text), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 45\n    }\n  }, props.description, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"black\",\n    onClick: () => setOpenModel(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 45\n    }\n  }, \"Nope\"), /*#__PURE__*/React.createElement(Button, {\n    content: \"Yep, that's me\",\n    labelPosition: \"right\",\n    icon: \"checkmark\",\n    onClick: () => setOpenModel(false),\n    positive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 45\n    }\n  }))))))));\n};\n\nexport default Project;","map":{"version":3,"sources":["/Users/joeplukarski/projects/apps/webapps/repositories/Joe-Plukarski-Portfolio/src/components/project.jsx"],"names":["React","useState","Segment","Image","Grid","Dimmer","Button","Modal","Divider","Project","props","active","setActive","openModel","setOpenModel","handleHide","handShow","text","description"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Segment, Image, Grid, Dimmer, Button, Modal, Divider} from 'semantic-ui-react'\n\nconst Project = props => {\n    const [active, setActive] = useState(false)\n    const [openModel, setOpenModel] = useState(false)\n    const handleHide = () => {setActive(true)}\n    const handShow = () => {setActive(false)}\n    return(\n        <>\n            <Grid.Column>\n                <Segment onMouseEnter={()=> handleHide()} onMouseLeave={()=> handShow()}>\n                    <Dimmer.Dimmable dimmed={active}>\n                        <Image src=\"campaignquery.jpeg\"/>\n                        <Dimmer active={active} >\n                                <h2>\n                                    {props.text}\n                                </h2>\n                                <Modal\n                                closeIcon\n                                    onClose={() => setOpenModel(false)}\n                                    onOpen={() => setOpenModel(true)}\n                                    open={openModel}\n                                    trigger={<Button inverted>See More</Button>}\n                                >\n                                        <Modal.Header>{props.text}</Modal.Header>\n                                        <Modal.Content >\n                                            <Modal.Description>\n                                                {props.description}\n                                                <Divider />\n                                            </Modal.Description>\n\n                                        </Modal.Content>\n                                        <Modal.Actions>\n                                            <Button color='black' onClick={() => setOpenModel(false)}>\n                                            Nope\n                                            </Button>\n                                            <Button\n                                            content=\"Yep, that's me\"\n                                            labelPosition='right'\n                                            icon='checkmark'\n                                            onClick={() => setOpenModel(false)}\n                                            positive\n                                            />\n                                        </Modal.Actions>\n                                    </Modal>\n                        </Dimmer>\n                    </Dimmer.Dimmable>\n                </Segment>\n            </Grid.Column>\n        </>\n    )\n}\n\nexport default Project"]},"metadata":{},"sourceType":"module"}